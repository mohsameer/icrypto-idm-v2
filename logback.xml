<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<configuration>

    <if condition='"true".equals(property("midpoint.logging.alt.enabled"))'>
        <then>
            <include resource="logback-alt.xml" />
        </then>
    </if>

    <appender name="MIDPOINT_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- See http://logback.qos.ch/manual/appenders.html#RollingFileAppender -->
        <!-- and http://logback.qos.ch/manual/appenders.html#SizeAndTimeBasedRollingPolicy -->
        <!-- for further documentation -->
        <Append>true</Append>
        <File>${midpoint.home}/log/midpoint.log</File>
        <encoder>
            <pattern>%date [%X{subsystem}] [%thread] %level \(%logger\): %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${midpoint.home}/log/midpoint-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>10</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
    </appender>

    <!-- Appender for profiling purposes -->
    <appender name="MIDPOINT_PROFILE_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- See http://logback.qos.ch/manual/appenders.html#RollingFileAppender -->
        <!-- and http://logback.qos.ch/manual/appenders.html#SizeAndTimeBasedRollingPolicy -->
        <!-- for further documentation -->
        <Append>true</Append>
        <File>${midpoint.home}/log/midpoint-profile.log</File>
        <encoder>
            <pattern>%date %level: %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${midpoint.home}/log/midpoint-profile-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>10</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
    </appender>
    <!-- Appender for profiling purposes -->
    <appender name="IDM_LOG" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <message>
                    <fieldName>message</fieldName>
                </message>
                <loggerName>
                    <shortenedLoggerNameLength>20</shortenedLoggerNameLength>
                </loggerName>
                <threadName/>
                <logLevel/>
                <callerData>
                    <fieldName>caller</fieldName>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <fileFieldName>file</fileFieldName>
                    <lineFieldName>line</lineFieldName>
                </callerData>
                <stackTrace>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>20</maxDepthPerThrowable>
                        <maxLength>1000</maxLength>
                        <shortenedClassNameLength>30</shortenedClassNameLength>
                        <rootCauseFirst>true</rootCauseFirst>
                        <inlineHash>true</inlineHash>
                    </throwableConverter>
                </stackTrace>
                <jsonMessage/>
                <mdc>
                    <includeMdcKeyName>trace_id</includeMdcKeyName>
                    <mdcKeyFieldName>trace_id=X-B3-TraceId</mdcKeyFieldName>
                    <includeMdcKeyName>span_id</includeMdcKeyName>
                    <mdcKeyFieldName>span_id=X-B3-SpanId</mdcKeyFieldName>
                    <includeMdcKeyName>baggage.x-icrypto-wfid</includeMdcKeyName>
                    <mdcKeyFieldName>baggage.x-icrypto-wfid=x-icrypto-wfid</mdcKeyFieldName>
                </mdc>
                <arguments>
                    <includeNonStructuredArguments>true</includeNonStructuredArguments>
                    <nonStructuredArgumentsFieldPrefix>prefix</nonStructuredArgumentsFieldPrefix>
                </arguments>
                <throwableClassName/>
                <throwableRootCauseClassName>
                    <useSimpleClassName>false</useSimpleClassName>
                </throwableRootCauseClassName>
            </providers>
        </encoder>
    </appender>

    <appender name="com.evolveum.midpoint.audit.log" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <message>
                    <fieldName>message</fieldName>
                </message>
                <loggerName>
                    <shortenedLoggerNameLength>20</shortenedLoggerNameLength>
                </loggerName>
                <threadName/>
                <logLevel/>
                <callerData>
                    <fieldName>caller</fieldName>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <fileFieldName>file</fileFieldName>
                    <lineFieldName>line</lineFieldName>
                </callerData>
                <stackTrace>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>20</maxDepthPerThrowable>
                        <maxLength>1000</maxLength>
                        <shortenedClassNameLength>30</shortenedClassNameLength>
                        <rootCauseFirst>true</rootCauseFirst>
                        <inlineHash>true</inlineHash>
                    </throwableConverter>
                </stackTrace>
                <jsonMessage/>
                <mdc>
                    <includeMdcKeyName>trace_id</includeMdcKeyName>
                    <mdcKeyFieldName>trace_id=X-B3-TraceId</mdcKeyFieldName>
                    <includeMdcKeyName>span_id</includeMdcKeyName>
                    <mdcKeyFieldName>span_id=X-B3-SpanId</mdcKeyFieldName>
                    <includeMdcKeyName>baggage.x-icrypto-wfid</includeMdcKeyName>
                    <mdcKeyFieldName>baggage.x-icrypto-wfid=x-icrypto-wfid</mdcKeyFieldName>
                </mdc>
                <arguments>
                    <includeNonStructuredArguments>true</includeNonStructuredArguments>
                    <nonStructuredArgumentsFieldPrefix>prefix</nonStructuredArgumentsFieldPrefix>
                </arguments>
                <throwableClassName/>
                <throwableRootCauseClassName>
                    <useSimpleClassName>false</useSimpleClassName>
                </throwableRootCauseClassName>
            </providers>
        </encoder>
    </appender>

    <logger name="org.springframework.boot.SpringApplication" level="INFO"/>

    <logger name="ro.isdc.wro.extensions.processor.css.Less4jProcessor" level="ERROR"/>
    <logger name="org.hibernate.engine.jdbc.spi.SqlExceptionHelper" level="OFF"/>
    <logger name="org.hibernate.engine.jdbc.batch.internal.BatchingBatch" level="OFF"/>
    <logger name="org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl" level="WARN"/>
    <logger name="PROFILING" level="INFO"/>
    <logger name="com.evolveum.midpoint" level="INFO" />
    <logger name="com.evolveum.midpoint.web.util.MidPointProfilingServletFilter" level="TRACE">
        <appender-ref ref="MIDPOINT_PROFILE_LOG"/>
    </logger>

    <if condition='"true".equals(property("midpoint.logging.alt.enabled"))'>
        <then>
            <root level="WARN">
                <appender-ref ref="MIDPOINT_LOG"/>
                <appender-ref ref="ALT_LOG"/>
            </root>
        </then>
        <else>
            <root level="WARN">
                <appender-ref ref="MIDPOINT_LOG"/>
            </root>
        </else>
    </if>
    <root level="INFO">
        <appender-ref ref="IDM_LOG"/>
    </root>
</configuration>
